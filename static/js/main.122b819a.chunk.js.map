{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","input","setInput","list","setList","username","setUsername","useEffect","a","window","prompt","sendMessage","event","preventDefault","fetch","method","headers","body","JSON","stringify","Date","toLocaleString","response","json","console","log","concat","className","value","onChange","target","onClick","type","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qPAkGeA,MA1Ff,WACE,MAAyBC,mBAAS,IAAlC,mBAAMC,EAAN,KAAaC,EAAb,KACA,EAAwBF,mBAAS,IAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAAgCJ,mBAAS,SAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KAECC,oBAAS,sBAAC,4BAAAC,EAAA,sDACHH,EAAWI,OAAOC,OAAO,oBAC/BJ,EAAYD,GAFH,2CAIR,IAEH,IAAMM,EAAW,uCAAG,WAAOC,GAAP,eAAAJ,EAAA,6DAClBI,EAAMC,iBADY,kBAOfC,MACC,qFACA,CACEC,OAAO,OACTC,QAAS,CACP,eAAgB,oBAGlBC,KAAMC,KAAKC,UAAU,CAAC,CAACd,EAASJ,GAAO,IAAImB,MAAOC,oBAfpC,cAKVC,EALU,gBAkBRA,EAASC,OAlBD,OAmBdrB,EAAS,IAnBK,kDAuBhBsB,QAAQC,IAAR,MAvBgB,0DAAH,sDAkDjB,OAdAD,QAAQC,IAAIxB,GAEZM,oBAAS,sBAAC,sBAAAC,EAAA,sDAINJ,EAAQD,EAAKuB,OAAO,CAClBrB,SAASA,EACTJ,MAAMI,KANF,2CAUP,IAGD,sBAAKsB,UAAW,MAAhB,UACE,wDAOE,qBAAqBA,UAAY,SAAjC,UACGtB,EADH,IAGA,oBAAqBsB,UAAY,QAAjC,SACC1B,GADUI,GAHX,MAAWA,GAUb,iCACE,uBAAOuB,MAAS3B,EAChB4B,SAAY,SAACjB,GAAD,OAAWV,EAASU,EAAMkB,OAAOF,UAC7C,wBAAQG,QAASpB,EAAaqB,KAAO,SAArC,yBC/EOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.122b819a.chunk.js","sourcesContent":["import { useEffect, useState } from 'react'\n// import GoogleSheetsProvider from 'react-db-google-sheets';\nimport './App.css';\n// import database from './firebase';\n// import firebase from 'firebase';\n// import database from 'react-db-google-sheets';\n\n\nfunction App() {\n  const[input, setInput] = useState(\"\");\n  const [list, setList] = useState([]);\n  const [username, setUsername] = useState('Guest');\n\n   useEffect(async () =>  {\n    const username = window.prompt(\"Enter a username\");\n    setUsername(username);\n        \n  }, []);\n\n  const sendMessage = async (event) => {\n    event.preventDefault();\n\n\n    try{\n      const response = \n      await\n       fetch(\n        \"https://v1.nocodeapi.com/varshitha1707/google_sheets/BxcUhodDbNfyimiF?tabId=Sheet1\",\n        {\n          method:'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n\n        body: JSON.stringify([[username,input, new Date().toLocaleString]])\n        }\n        );\n        await response.json();\n        setInput(\"\");\n        \n\n    }catch(err){\n      console.log(err)\n    }\n    // const okarin = {\n    //   username: username,\n    //   input: input,\n    //   // timestamp: firebase.firestore.FieldValue.serverTimestamp()\n    // }\n\n    // // database.collection('messages')\n    // .add(okarin)\n   \n  };\n\n  console.log(input);\n\n  useEffect(async () => {\n\n    // database.collection('messages').orderBy('timestamp', 'desc')\n    // onSnapshot((snapshot) => {\n      setList(list.concat({\n        username:username,\n        input:username\n      }))\n    // }\n    // )\n  }, [])\n  \n  return (\n    <div className =\"app\">\n      <h1>GRAPEJUICE CHAT BOX :)</h1> \n\n    \n\n\n      {/* {list.map(({ message, username: { input, timestamp, username } }) => ( */}\n\n        <h3 key = {username} className = 'okarin'>\n          {username}: \n\n        <h4 key = {username} className = 'varsh'>\n        {input}</h4> </h3> \n\n          \n      {/* ))} */}\n\n\n      <form>\n        <input value = {input} \n        onChange = {(event) => setInput(event.target.value)} /> \n        <button onClick={sendMessage} type = \"submit\">Send</button>\n      </form>\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}